JS ->
    It is an object based client side scripting lang.
    It is an interprator lang.
    It is case sensitive lang.
    It has errors
    It is dynamic/loosely type lang.
    Extension of js .js

    Types ->
        1. Internal
            <script></script>
        2. External
            <script src=""></script>

    Browser 
        Js Executer
            1. v8 engine - chrome/edge/brave
            2. mozilla - spider monkey
            3. I.E -> chakra

    How To Print In Js ->
        document.write()

    
    Data Types ->

        1. Boolean -> true(1) or false(0)
        2. Number -> 5 or 6.6
        3. String -> "" or ''
        4. null
        5. array -> []
        6. object -> {}
        7. undefined
        8. NaN -> Not A Number (5*"jk")



    Variables ->

        How To Create Variables ->
            var variablename=value

            Rules 
                1. no space
                2. no Number
                3. no symbols (exception _ or $)

    Concatination ->
    Joining
    +

    Arthematic Op ->
        +,-,*,/, % (modulas (remainder)), **(exponential)

    Comparison Op ->
        >,<,>=,<=

        == (compare value) Equal to
        === (compare data type and value) identical

        != not Equal

        !== Not identical

    Logical Op. ->
        AND -- && if all true result true
        OR -- || if one true result true
        NOT -- ! opposite




    Inc / Dec
        Post Increment (Next Line + 1)
        a++ => a+1

        Pre (same line)
        ++a

    
    Conditions ->


        Single Conditions
        1. if

            Syntax ->
                if(Comparison){
                    statement
                }

        2. if else


            Syntax ->
                if(Comparison){
                    statement1
                }else{
                    statement2
                }


        Multiple

        3. if else if
            Syntax ->

            if(Comparison1){
                statement1
            }else if(Comparison2){
                statement2
            }
            .
            .
            else{
                statement
            }
        
        4. switch

            Syntax ->
            switch(expression){
                case Comparison1:
                statement1;
                break;
                case Comparison2:
                statement2
                break;

                .
                .
                .
                default:
                statement
            }


1. compare 4 numbers


Loops ->
    1. for

        Syntax ->
            for(init;Comparison;Inc/dec){
                statement
            }

    2. while

        init
        while(Comparison){
            statement
            inc/dec
        }


    3. do while




Functions ->
    Block Of Code
    Types ->
        1. Inbuilt
        2. User Defined

        Types ->
            Normal Function
            Parameterized/Arguments/Attributtes




        How To Create A Function ->
            function fnname(){
                code
            }

        Rules Of Function Name ->
            1. No Space
            2. No Number
            3. No Symbols
            4. camelCase





Arrays(List) ->
    Collection of Multiple values in a Variable

    []

    Types ->
        1. Index Array
            Those Array whose items position is given by lang. and it always starts from 0 to length - 1 of array
      
            Example ->
                [value1,value2,.....]



        2. Associative Array (Not Supported)


    Object(Dictionary) ->

            Collection of Multiple values in a Variable
            in a key value pair

            {}

            Example ->
                {
                    key1:value1,
                    key2:value2,
                    .
                    .
                    .
                    .
                }








